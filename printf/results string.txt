WARNING: The return values reported here may be bugged on some systems.
          See https://github.com/gavinfielder/pft/issues/11
          Run in non-fork mode (-X) to ensure accurate return value
          reporting, set IGNORE_RETURN_VALUE=1 in options-config.ini,
          or run test_pipes.sh to see if your system has this bug.
          This bug does not affect the pass/fail result of a test, nor
          the function output--only the reported return value.


Test  12 (nocrash_nullspec_5w) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%5");}
    SEGFAULT

Test  13 (nocrash_nullspec_5wzp) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%05");}
    SEGFAULT

Test  14 (nocrash_nullspec_5wzplj) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-05");}
    SEGFAULT

Test  15 (nocrash_nullspec_5wlj) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-5");}
    SEGFAULT

Test  24 (s_space_padded_field_width) : FAILED.
    First line of code: {return test("%32s", "abc");}
      expected return value : 35
      your return value     : 35
      expected output : "                             abc"
      your output     : "                             abc(0, 0, 32, 0)
"
      expected (nonprintable as hex) : "                             abc"
      actual   (nonprintable as hex) : "                             abc(0, 0, 32, 0)\x0a"

Test  25 (s_space_padded_field_width2) : FAILED.
    First line of code: {return test("%16s", "nark nark");}
      expected return value : 17
      your return value     : 17
      expected output : "       nark nark"
      your output     : "       nark nark(0, 0, 16, 0)
"
      expected (nonprintable as hex) : "       nark nark"
      actual   (nonprintable as hex) : "       nark nark(0, 0, 16, 0)\x0a"

Test  26 (s_space_padded_over_field_width) : FAILED.
    First line of code: {return test("%5s", "goes over");}
      expected return value : 9
      your return value     : 9
      expected output : "goes over"
      your output     : "goes over(0, 0, 5, 0)
"
      expected (nonprintable as hex) : "goes over"
      actual   (nonprintable as hex) : "goes over(0, 0, 5, 0)\x0a"

Test  27 (s_space_padded_field_width_lj) : FAILED.
    First line of code: {return test("%-32s", "abc");}
      expected return value : 35
      your return value     : 35
      expected output : "abc                             "
      your output     : "abc                             (1, 0, 32, 0)
"
      expected (nonprintable as hex) : "abc                             "
      actual   (nonprintable as hex) : "abc                             (1, 0, 32, 0)\x0a"

Test  28 (s_space_padded_field_width2_lj) : FAILED.
    First line of code: {return test("%-16s", "nark nark");}
      expected return value : 17
      your return value     : 17
      expected output : "nark nark       "
      your output     : "nark nark       (1, 0, 16, 0)
"
      expected (nonprintable as hex) : "nark nark       "
      actual   (nonprintable as hex) : "nark nark       (1, 0, 16, 0)\x0a"

Test  29 (s_space_padded_over_field_width_lj) : FAILED.
    First line of code: {return test("%-5s", "goes over");}
      expected return value : 9
      your return value     : 9
      expected output : "goes over"
      your output     : "goes over(1, 0, 5, 0)
"
      expected (nonprintable as hex) : "goes over"
      actual   (nonprintable as hex) : "goes over(1, 0, 5, 0)\x0a"

Test  30 (s_string_prec_notrunc) : FAILED.
    First line of code: {return test("%.7s", "hello");}
      expected return value : 5
      your return value     : 5
      expected output : "hello"
      your output     : "hello(0, 0, 0, 7)
"
      expected (nonprintable as hex) : "hello"
      actual   (nonprintable as hex) : "hello(0, 0, 0, 7)\x0a"

Test  31 (s_string_prec_trunc) : FAILED.
    First line of code: {return test("%.3s", "hello");}
      expected return value : 3
      your return value     : 5
      expected output : "hel"
      your output     : "hello(0, 0, 0, 3)
"
      expected (nonprintable as hex) : "hel"
      actual   (nonprintable as hex) : "hello(0, 0, 0, 3)\x0a"

Test  32 (s_string_prec_default) : FAILED.
    First line of code: {return test("%.s", "hello");}
      expected return value : 0
      your return value     : 5
      expected output : ""
      your output     : "hello(0, 0, 0, 0)
"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "hello(0, 0, 0, 0)\x0a"

Test  33 (s_string_prec_zero) : FAILED.
    First line of code: {return test("%.0s", "hello");}
      expected return value : 0
      your return value     : 5
      expected output : ""
      your output     : "hello(0, 1, 0, 0)
"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "hello(0, 1, 0, 0)\x0a"

Test  34 (s_two_strings_prec_2trunc) : FAILED.
    First line of code: {return test("%.3s%.2s", "holla", "bitch");}
      expected return value : 5
      your return value     : 11
      expected output : "holbi"
      your output     : "hollabitch(0, 0, 0, 3)
(0, 0, 0, 2)
"
      expected (nonprintable as hex) : "holbi"
      actual   (nonprintable as hex) : "hollabitch(0, 0, 0, 3)\x0a(0, 0, 0, 2)\x0a"

Test  35 (s_two_strings_prec_1trunc_a) : FAILED.
    First line of code: {return test("%.2s%.7s", "hello", "world");}
      expected return value : 7
      your return value     : 11
      expected output : "heworld"
      your output     : "helloworld(0, 0, 0, 2)
(0, 0, 0, 7)
"
      expected (nonprintable as hex) : "heworld"
      actual   (nonprintable as hex) : "helloworld(0, 0, 0, 2)\x0a(0, 0, 0, 7)\x0a"

Test  36 (s_two_strings_prec_1trunc_b) : FAILED.
    First line of code: {return test("%.7s%.2s", "hello", "world");}
      expected return value : 7
      your return value     : 11
      expected output : "hellowo"
      your output     : "helloworld(0, 0, 0, 7)
(0, 0, 0, 2)
"
      expected (nonprintable as hex) : "hellowo"
      actual   (nonprintable as hex) : "helloworld(0, 0, 0, 7)\x0a(0, 0, 0, 2)\x0a"

Test  37 (s_two_strings_prec_0trunc) : FAILED.
    First line of code: {return test("%.5s%7s", "yo", "boi");}
      expected return value : 9
      your return value     : 9
      expected output : "yo    boi"
      your output     : "yo    boi(0, 0, 0, 5)
(0, 0, 7, 0)
"
      expected (nonprintable as hex) : "yo    boi"
      actual   (nonprintable as hex) : "yo    boi(0, 0, 0, 5)\x0a(0, 0, 7, 0)\x0a"

